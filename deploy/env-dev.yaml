rbac:
  create: true
awsAssumeRole:
  sourceID: "026314688606"
app:
  enabled: true
  containerPort: 3000
  replicaCount: 1
  extraEnvs:
    - name: SD_ENV
      value: "dev"
    - name: TITILER_MOSAIC_BACKEND
      value: "s3://externaldata.dev.saildrone.com/"
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
      scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /healthz
      port: http
      scheme: HTTP
    initialDelaySeconds: 45
    periodSeconds: 15
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 5

  service:
    type: ClusterIP
    port: 3000

  ingress:
    internalEnabled: true
    trustedEnabled: true
    publicEnabled: false
    tls:
      # Secrets must be manually created in the namespace.
      - secretName: tls-secret
        hosts:
          - titiler.dev.saildrone.com
    hosts:
      - host: titiler.dev.saildrone.com
        paths:
          - path: /
            servicePort: http

  metrics:
    enabled: false
    endpoints:
      port: 9100
      interval: 30s
      path: /metrics
      # scheme: http

  resources:
    requests:
      cpu: 100m
      memory: 1.2Gi
    limits:
      memory: 1.3Gi

  redis:
    enabled: true
    cluster:
      enabled: false
      slaveCount: 0
    configmap: |
      maxmemory 1900mb
      maxmemory-policy allkeys-lru
      databases 1
      appendonly no
      #save 900 1
      #save 300 10
      #save 60 10000
      repl-diskless-sync yes
    extraEnvs:
      - name: REDIS_AOF_ENABLED
        value: no
    master:
      persistence:
        enabled: false
      resources:
        limits:
          memory: "2Gi"
        requests:
          cpu: 100m
          memory: "2Gi"
